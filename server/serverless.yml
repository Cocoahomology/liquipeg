service: liquipeg-server

package:
  individually: true
  excludeDevDependencies: true
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 128
  timeout: 10
  region: ap-east-1
  endpointType: REGIONAL # Set to regional because the api gateway will be behind a cloudfront distribution
  stage: prod # Default to dev if no stage is specified
  tracing: # Enable X-Ray tracing (debugging)
    apiGateway: false
    lambda: false
  iamRoleStatements:
    - Effect: Allow # Lambda logs on cloudwatch
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - "Fn::Join":
            - ":"
            - - "arn:aws:logs"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "log-group:/aws/lambda/*:*:*"
    # For warm-up functions
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:*Object*"
      Resource: "*"
    # VPC Access?
    - Effect: "Allow"
      Action:
        - "ec2:CreateNetworkInterface"
        - "ec2:DescribeNetworkInterfaces"
        - "ec2:DeleteNetworkInterface"
      Resource: "*"
  environment:
    PSQL_PW: ${env:PSQL_PW}
    MODE: lambda
    ETHEREUM_RPC: ${env:ETHEREUM_RPC}

functions:
  fillMissingBlockTimestamps:
    handler: src/handlers/fillMissingBlockTimestamps.default
    timeout: 120
    memorySize: 1024
    events:
      - schedule: cron(3 0,12 * * ? *)
  fillTimeSamplePoints:
    handler: src/handlers/fillTimeSamplePoints.default
    timeout: 120
    memorySize: 1024
    events:
      - schedule: cron(4 0,12 * * ? *)
  fillTroveDataSummaries:
    handler: src/handlers/fillTroveDataSummaries.default
    timeout: 120
    memorySize: 1024
    events:
      - schedule: cron(5 0,12 * * ? *)
  getEvents:
    handler: src/handlers/getEvents.default
    timeout: 30
    memorySize: 2000
    events:
      - http:
          path: getevents/{protocolId}/{chain}
          method: get
  getLatestTroveData:
    handler: src/handlers/getLatestTroveData.default
    timeout: 30
    memorySize: 2000
    events:
      - http:
          path: getlatesttrovedata/{protocolId}/{chain}
          method: get
  getPoolDataChart:
    handler: src/handlers/getPoolDataChart.default
    timeout: 30
    memorySize: 2000
    events:
      - http:
          path: getpooldatachart/{protocolId}/{chain}
          method: get
  getPricesChart:
    handler: src/handlers/getPricesChart.default
    timeout: 30
    memorySize: 2000
    events:
      - http:
          path: getpriceschart/{protocolId}/{chain}/{troveManagerIndex}
          method: get
  getProtocols:
    handler: src/handlers/getProtocols.default
    timeout: 30
    memorySize: 2000
    events:
      - http:
          path: getprotocols
          method: get
  getTroveDataSummaryChart:
    handler: src/handlers/getTroveDataSummaryChart.default
    timeout: 30
    memorySize: 2000
    events:
      - http:
          path: gettrovedatasummarychart/{protocolId}/{chain}/{troveManagerIndex}
          method: get
  runAdapter:
    handler: src/handlers/runAdapter.default
    timeout: 900
    memorySize: 1024
  runAllAdapters:
    handler: src/handlers/runAllAdapters.default
    timeout: 900
    memorySize: 250
    events:
      - schedule: cron(1 0,12 * * ? *)
  runPrices:
    handler: src/handlers/runPrices.default
    timeout: 900
    memorySize: 1024
  runAllPrices:
    handler: src/handlers/runAllPrices.default
    timeout: 900
    memorySize: 250
    events:
      - schedule: cron(2 0,12 * * ? *)

# resources:
#   # CORS for api gateway errors
#   - ${file(resources/api-gateway-errors.yml)}

custom:
  stage: ${opt:stage, self:provider.stage}
  esbuild:
    bundle: true
    minify: true # set to true for production if needed
    sourcemap: true
    exclude: ["aws-sdk", "dtrace-provider"]
    target: "node18"
    platform: "node"
    concurrency: 10
  prune:
    automatic: true
    number: 5 # Number of versions to keep

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-prune-plugin
